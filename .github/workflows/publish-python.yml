name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.0.3)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  update-checksums:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Download release binaries and update checksums
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Download binaries
          curl -L -o pyinit-darwin-amd64 "https://github.com/Pradyothsp/pyinit/releases/download/v$VERSION/pyinit-darwin-amd64"
          curl -L -o pyinit-darwin-arm64 "https://github.com/Pradyothsp/pyinit/releases/download/v$VERSION/pyinit-darwin-arm64"
          curl -L -o pyinit-linux-amd64 "https://github.com/Pradyothsp/pyinit/releases/download/v$VERSION/pyinit-linux-amd64"
          
          # Calculate checksums
          DARWIN_AMD64_SHA=$(sha256sum pyinit-darwin-amd64 | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(sha256sum pyinit-darwin-arm64 | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(sha256sum pyinit-linux-amd64 | cut -d' ' -f1)
          
          # Update downloader.py with new checksums
          sed -i "s/\"$VERSION\": {/\"$VERSION\": {\n            \"darwin-amd64\": \"$DARWIN_AMD64_SHA\",\n            \"darwin-arm64\": \"$DARWIN_ARM64_SHA\",\n            \"linux-amd64\": \"$LINUX_AMD64_SHA\",/" python-package/pyinit_cli/downloader.py
          
          # Update version in files
          sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" python-package/pyinit_cli/__init__.py
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" python-package/pyproject.toml

      - name: Upload updated files
        uses: actions/upload-artifact@v4
        with:
          name: updated-python-package
          path: python-package/

  publish:
    needs: update-checksums
    runs-on: ubuntu-latest
    environment: PyPI
    permissions:
      id-token: write  # For trusted publishing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download updated package
        uses: actions/download-artifact@v4
        with:
          name: updated-python-package
          path: python-package/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          cd python-package
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: python-package/dist/